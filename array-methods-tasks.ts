/* ## Простые задачи на методы массивов

### map

1. Преобразовать массив температур из °C в °F.

```js
// вход
const celsius = [0, 10, 20];
// ожидаемый результат
// [32, 50, 68]
``` */
//##########################################################
const celsius = [0, 10, 20];

const fahrenheit = celsius.map((cel) => (cel * 1.8)+32);
console.log(fahrenheit);

//##########################################################

/* 2. Получить массив длин строк.

```js
// вход
const words = ["cat", "hello", ""];
// ожидаемый результат
// [3, 5, 0]
``` */

//##########################################################
const words1 = ["cat", "hello", ""];

const arrLengthString = words1.map((str) => str.length);
console.log(arrLengthString);

//##########################################################

/* ### filter

1. Оставить только чётные числа.

```js
// вход
const nums = [1, 2, 3, 4, 5, 6];
// ожидаемый результат
// [2, 4, 6]
``` */
//##########################################################
const nums = [1, 2, 3, 4, 5, 6];

const evenNumber = nums.filter((num) => num % 2 == 0);
console.log(evenNumber);

//##########################################################


/* 2. Оставить строки длиной > 3.

```js
// вход
const words = ["a", "ab", "abcd", "hello"];
// ожидаемый результат
// ['abcd', 'hello']
``` */

//##########################################################
const words2 = ["a", "ab", "abcd", "hello"];

const whereStringMoreThree = words2.filter((string) => string.length>3);
console.log(whereStringMoreThree);

//##########################################################

/* ### sort

1. Отсортировать числа по возрастанию (как числа).

```js
// вход
const nums = [10, 1, 5, 20, 3];
// ожидаемый результат
// [1, 3, 5, 10, 20]
``` */
//##########################################################  ???????????????
const nums2: number[] = [10, 1, 5, 20, 3];

const sortedNumbers = nums2.sort((buf1,buf2)=>buf1-buf2);
console.log(sortedNumbers);

//##########################################################

/* 2. Отсортировать строки по длине (от коротких к длинным).

```js
// вход
const words = ["bbb", "a", "cc"];
// ожидаемый результат
// ['a', 'cc', 'bbb']
``` */
//##########################################################
const words = ["bbb", "a", "cc"];

const sortedString = words.sort((buf1,buf2)=>buf1.length-buf2.length);
console.log(sortedString);

//##########################################################

/* ### forEach

1. Посчитать сумму чисел с помощью переменной `sum`.

```js
// вход
const nums = [1, 2, 3, 4, 5];
// ожидаемый результат
// sum = 15
``` */
//##########################################################???????
const nums3 = [1, 2, 3, 4, 5];

let sum = 0;
nums3.forEach((num) =>
    { 
        sum = sum + num;
    });
console.log(sum);
//##########################################################

/* 2. Сформировать массив квадратов, добавляя элементы внутри forEach.

```js
// вход
const nums = [2, 3, 4];
// ожидаемый результат
// [4, 9, 16] */
//##########################################################
const nums4 = [2, 3, 4];

const square: number[] = [];
nums4.forEach((num) =>{ square.push(num *num);});
console.log(square);

//##########################################################

/* ### find

1. Найти первое число больше 10.

```js
// вход
const nums = [3, 9, 12, 8, 15];
// ожидаемый результат
// 12
``` */
//##########################################################
const nums5 = [3, 9, 12, 8, 15];

const firstMore = nums5.find((num)=> num>10);
console.log(firstMore);
//##########################################################

/* 2. Найти первую строку, начинающуюся с 'A' или 'a'.

```js
// вход
const names = ["bob", "Alice", "adam", "Brian"];
// ожидаемый результат
// 'Alice' */

//##########################################################
const names = ["bob", "Alice", "adam", "Brian"];

const firstStringParam = names.find((name)=> name[0] === 'A' || name[0]  === 'a');
console.log(firstStringParam);

//##########################################################